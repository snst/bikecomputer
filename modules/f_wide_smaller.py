# Code generated by font_to_py.py.
# Font: Oswald-VariableFont_wght.ttf Char set: .0123456789:
# Cmd: /home/stsc/esp/bikecomputer/tools/font_to_py.py -x /home/stsc/esp/bikecomputer/fonts/Oswald-VariableFont_wght.ttf 32 /home/stsc/esp/bikecomputer/modules/f_wide_smaller.py -c 0123456789.: -e 32
version = '0.33'

def height():
    return 32

def baseline():
    return 32

def max_width():
    return 20

def hmap():
    return True

def reverse():
    return False

def monospaced():
    return False

def min_ch():
    return 32

def max_ch():
    return 58

_font =\
b'\x09\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'\
b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'\
b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'\
b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'\
b'\x00\x00\x07\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'\
b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x3c'\
b'\x3c\x3c\x3c\x3c\x14\x00\x01\xf8\x00\x07\xfe\x00\x0f\xff\x00\x1f'\
b'\x9f\x80\x1f\x07\x80\x1e\x07\x80\x3e\x07\xc0\x3e\x03\xc0\x3c\x03'\
b'\xc0\x3c\x03\xc0\x3c\x03\xc0\x3c\x03\xc0\x3c\x03\xc0\x3c\x03\xc0'\
b'\x3c\x03\xc0\x3c\x03\xc0\x3c\x03\xc0\x3c\x03\xc0\x3c\x03\xc0\x3c'\
b'\x03\xc0\x3c\x03\xc0\x3c\x03\xc0\x3c\x03\xc0\x3c\x03\xc0\x3e\x03'\
b'\xc0\x1e\x07\xc0\x1e\x07\x80\x1f\x07\x80\x0f\xdf\x80\x0f\xff\x00'\
b'\x07\xfe\x00\x01\xf8\x00\x0f\x00\x01\xe0\x03\xe0\x0f\xe0\x3f\xe0'\
b'\x7f\xe0\x7f\xe0\x61\xe0\x01\xe0\x01\xe0\x01\xe0\x01\xe0\x01\xe0'\
b'\x01\xe0\x01\xe0\x01\xe0\x01\xe0\x01\xe0\x01\xe0\x01\xe0\x01\xe0'\
b'\x01\xe0\x01\xe0\x01\xe0\x01\xe0\x01\xe0\x01\xe0\x01\xe0\x01\xe0'\
b'\x01\xe0\x01\xe0\x01\xe0\x01\xe0\x13\x00\x01\xf8\x00\x07\xfe\x00'\
b'\x0f\xff\x00\x1f\xbf\x00\x1e\x0f\x80\x3e\x07\x80\x3c\x07\x80\x3c'\
b'\x07\x80\x3c\x07\x80\x3c\x07\x80\x00\x07\x80\x00\x0f\x80\x00\x0f'\
b'\x00\x00\x1f\x00\x00\x1f\x00\x00\x3e\x00\x00\x3c\x00\x00\x7c\x00'\
b'\x00\xf8\x00\x00\xf0\x00\x01\xf0\x00\x03\xe0\x00\x03\xc0\x00\x07'\
b'\xc0\x00\x0f\x80\x00\x0f\x00\x00\x1f\x00\x00\x1e\x00\x00\x3f\xff'\
b'\x80\x3f\xff\x80\x3f\xff\x80\x3f\xff\x80\x13\x00\x03\xf8\x00\x0f'\
b'\xfc\x00\x1f\xfe\x00\x3f\xbf\x00\x3e\x0f\x80\x3c\x07\x80\x3c\x07'\
b'\x80\x3c\x07\x80\x3c\x07\x80\x00\x07\x80\x00\x07\x80\x00\x0f\x00'\
b'\x00\x3f\x00\x00\xfe\x00\x00\xf8\x00\x00\xfc\x00\x00\xfe\x00\x00'\
b'\x1f\x00\x00\x0f\x00\x00\x0f\x80\x00\x07\x80\x00\x07\x80\x00\x07'\
b'\x80\x3c\x07\x80\x3c\x07\x80\x3c\x07\x80\x3c\x0f\x80\x3e\x0f\x00'\
b'\x1f\xbf\x00\x1f\xfe\x00\x0f\xfc\x00\x03\xf0\x00\x13\x00\x00\x3e'\
b'\x00\x00\x7e\x00\x00\x7e\x00\x00\xfe\x00\x00\xfe\x00\x01\xfe\x00'\
b'\x01\xde\x00\x01\xde\x00\x03\xde\x00\x03\x9e\x00\x07\x9e\x00\x07'\
b'\x9e\x00\x0f\x1e\x00\x0f\x1e\x00\x0f\x1e\x00\x1e\x1e\x00\x1e\x1e'\
b'\x00\x3c\x1e\x00\x3c\x1e\x00\x3c\x1e\x00\x3f\xff\xc0\x3f\xff\xc0'\
b'\x3f\xff\xc0\x3f\xff\xc0\x00\x1e\x00\x00\x1e\x00\x00\x1e\x00\x00'\
b'\x1e\x00\x00\x1e\x00\x00\x1e\x00\x00\x1e\x00\x00\x1e\x00\x13\x00'\
b'\x1f\xff\x00\x1f\xff\x00\x1f\xff\x00\x1f\xff\x00\x1c\x00\x00\x1c'\
b'\x00\x00\x1c\x00\x00\x1c\x00\x00\x1c\x00\x00\x1c\x00\x00\x1c\x00'\
b'\x00\x1c\xf8\x00\x1f\xfe\x00\x1f\xff\x00\x1f\x1f\x00\x1e\x0f\x80'\
b'\x1c\x07\x80\x00\x07\x80\x00\x07\x80\x00\x07\x80\x00\x07\x80\x00'\
b'\x07\x80\x00\x07\x80\x3c\x07\x80\x3c\x07\x80\x3c\x07\x80\x3c\x07'\
b'\x80\x3e\x0f\x00\x1f\x1f\x00\x1f\xfe\x00\x0f\xfc\x00\x03\xf8\x00'\
b'\x14\x00\x01\xf8\x00\x07\xfe\x00\x0f\xff\x00\x0f\xff\x80\x1f\x07'\
b'\x80\x1e\x07\xc0\x1e\x07\xc0\x1e\x03\xc0\x3e\x00\x00\x3c\x00\x00'\
b'\x3c\x00\x00\x3c\x00\x00\x3c\x00\x00\x3c\xfc\x00\x3d\xff\x00\x3f'\
b'\xff\x80\x3f\x0f\x80\x3e\x07\x80\x3c\x07\xc0\x3c\x07\xc0\x3c\x03'\
b'\xc0\x3c\x03\xc0\x3c\x03\xc0\x3c\x03\xc0\x3e\x03\xc0\x1e\x07\x80'\
b'\x1e\x07\x80\x1f\x0f\x80\x0f\xff\x00\x0f\xff\x00\x07\xfe\x00\x01'\
b'\xf8\x00\x0f\x00\x7f\xfc\x7f\xfc\x7f\xf8\x00\x78\x00\x78\x00\x78'\
b'\x00\x78\x00\xf0\x00\xf0\x00\xf0\x00\xf0\x00\xf0\x01\xe0\x01\xe0'\
b'\x01\xe0\x01\xe0\x01\xe0\x03\xc0\x03\xc0\x03\xc0\x03\xc0\x03\xc0'\
b'\x07\xc0\x07\x80\x07\x80\x07\x80\x07\x80\x0f\x80\x0f\x00\x0f\x00'\
b'\x0f\x00\x0f\x00\x13\x00\x01\xf8\x00\x07\xfe\x00\x0f\xff\x00\x1f'\
b'\x9f\x00\x1e\x0f\x80\x1e\x07\x80\x3e\x07\x80\x3c\x07\x80\x3c\x07'\
b'\x80\x3e\x07\x80\x1e\x07\x80\x1e\x0f\x00\x1f\x1f\x00\x0f\xfe\x00'\
b'\x07\xfc\x00\x07\xfc\x00\x0f\xff\x00\x1f\x0f\x00\x1e\x0f\x80\x3c'\
b'\x07\x80\x3c\x07\x80\x3c\x07\x80\x3c\x07\xc0\x3c\x07\xc0\x3c\x07'\
b'\x80\x3c\x07\x80\x3c\x07\x80\x1e\x0f\x80\x1f\x1f\x00\x0f\xff\x00'\
b'\x07\xfe\x00\x01\xf8\x00\x14\x00\x01\xf0\x00\x07\xfc\x00\x0f\xfe'\
b'\x00\x1f\xbf\x00\x1e\x0f\x00\x3e\x07\x80\x3c\x07\x80\x3c\x07\x80'\
b'\x3c\x07\x80\x3c\x07\x80\x3c\x07\x80\x3c\x07\x80\x3c\x07\x80\x3c'\
b'\x07\x80\x3e\x07\x80\x1f\x0f\x80\x1f\xff\x80\x0f\xff\x80\x07\xe7'\
b'\x80\x00\x07\x80\x00\x07\x80\x00\x07\x80\x00\x07\x80\x00\x07\x80'\
b'\x3c\x07\x80\x3c\x07\x80\x3c\x0f\x80\x3e\x0f\x00\x1f\xbf\x00\x1f'\
b'\xfe\x00\x0f\xfc\x00\x03\xf0\x00\x08\x00\x00\x00\x00\x00\x00\x00'\
b'\x00\x00\x00\x00\x00\x3e\x3e\x3e\x3e\x00\x00\x00\x00\x00\x00\x00'\
b'\x00\x00\x3e\x3e\x3e\x3e\x00\x00\x00\x00'

_index =\
b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'\
b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x42\x00'\
b'\x00\x00\x64\x00\xc6\x00\x08\x01\x6a\x01\xcc\x01\x2e\x02\x90\x02'\
b'\xf2\x02\x34\x03\x96\x03\xf8\x03\x1a\x04'

_mvfont = memoryview(_font)
_mvi = memoryview(_index)
ifb = lambda l : l[0] | (l[1] << 8)

def get_ch(ch):
    oc = ord(ch)
    ioff = 2 * (oc - 32 + 1) if oc >= 32 and oc <= 58 else 0
    doff = ifb(_mvi[ioff : ])
    width = ifb(_mvfont[doff : ])

    next_offs = doff + 2 + ((width - 1)//8 + 1) * 32
    return _mvfont[doff + 2:next_offs], 32, width
 

def get_width(ch):
    oc = ord(ch)
    ioff = 2 * (oc - 32 + 1) if oc >= 32 and oc <= 58 else 0
    doff = ifb(_mvi[ioff : ])
    width = ifb(_mvfont[doff : ])
    return width
 
